/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.quizmaker.StudentFrames;

import java.awt.BorderLayout;
import java.awt.Checkbox;
import java.awt.CheckboxGroup;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Label;
import java.awt.geom.Area;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author szymo
 */
public class TestsFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form TestsFrame
     */
    public TestsFrame() {
        initComponents();
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testName = new javax.swing.JFormattedTextField();
        StartTestButton = new javax.swing.JButton();
        checkboxPanel = new javax.swing.JPanel();
        QuestLabel = new javax.swing.JLabel();
        NextButton = new javax.swing.JButton();
        image = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Tests");
        setMaximumSize(new java.awt.Dimension(806, 400));
        setMinimumSize(new java.awt.Dimension(806, 400));
        setPreferredSize(new java.awt.Dimension(806, 400));

        StartTestButton.setText("Start Test");
        StartTestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartTestButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout checkboxPanelLayout = new javax.swing.GroupLayout(checkboxPanel);
        checkboxPanel.setLayout(checkboxPanelLayout);
        checkboxPanelLayout.setHorizontalGroup(
            checkboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 258, Short.MAX_VALUE)
        );
        checkboxPanelLayout.setVerticalGroup(
            checkboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        NextButton.setText("Next");
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(testName, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                    .addComponent(checkboxPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(QuestLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StartTestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StartTestButton)
                            .addComponent(testName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NextButton)
                            .addComponent(QuestLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(17, 17, 17)
                        .addComponent(checkboxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartTestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartTestButtonActionPerformed
        // TODO add your handling code here
        getQuestions();
    }//GEN-LAST:event_StartTestButtonActionPerformed

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
        // TODO add your handling code here:
        String answer = "";
        if(numberOfQuest < lines.length - 1){
            numberOfQuest += 1;
            for(JCheckBox cb: checkBoxes){
                if(cb.getSelectedObjects() != null){
                    System.out.println("1");
                    answer += "1";
                } else {
                    System.out.println("0");
                    answer += "0";
                }
            }
            answers.add(answer);
            showQuestion();
        } else {
            saveAndGetResult();
        }
    }//GEN-LAST:event_NextButtonActionPerformed

    private void saveAndGetResult() {
        String filename = testName.getText() + "_Answer.bin";
        String[] wrightAnswers = getLines(filename);
        String result = "";
        int number = 1;
        System.out.println("before first");
        System.out.println(wrightAnswers.length);
        for(String ans : answers){
            if(ans.equals(wrightAnswers[number])) points.add(1);
            else points.add(0);
            number++;
        }
        System.out.println("after first");
        System.out.println("number:" + number);
        number = 1;
        for(Integer p: points){
            result += number + ": " + p + "\n";
        }
        double average = 0.0;
        for(Integer p : points){
            average += p;
        }
        average /= points.size();
        saveToProfIle(testName + " - " + average);
        
       
        JOptionPane.showMessageDialog(rootPane, result);
        this.setVisible(false);
    }
    
    private void saveToProfIle(String newContent){
        String filename = "Profile.bin";
        String content = "";
        File file = new File(filename);
        if (!file.exists()) {
            try {
                file.createNewFile();
            } catch (Exception e) {
                System.out.println("Nie można utworzyć pliku");
            }
        }
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(filename))) {
            content = (String) ois.readObject();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(filename))) {
            oos.writeObject(content + "\n" + newContent);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private void getQuestions() {
        String filename = testName.getText() + ".bin";
        lines = getLines(filename);
        questions = getQuestionsFromFile();
        showQuestion();
    }
    
    public String[][][] getQuestionsFromFile() {
        String regex1 = "_";
        String regex2 = "\\|";
        String filename = testName.getText() + ".bin";
        String[][][] linesArray = new String[lines.length][][];
        for (int i = 0; i < lines.length; i++) {
            linesArray[i] = new String[lines[i].split(regex1).length][];
            for (int j = 0; j < lines[i].split(regex1).length; j++) {
                linesArray[i][j] = lines[i].split(regex1)[j].split(regex2);
            }
        }
        return linesArray;
    }
    
    private void showQuestion() {
        checkboxPanel.setLayout(new BoxLayout(checkboxPanel, BoxLayout.Y_AXIS));
        checkboxPanel.removeAll();
        checkBoxes.removeAll(checkBoxes);
        checkboxPanel.add(new JLabel(questions[numberOfQuest][0][0]));
        for(String q : questions[numberOfQuest][1]){
            checkBoxes.add(new JCheckBox(q));
        }
        for(JCheckBox cb : checkBoxes){
            checkboxPanel.add(cb);
        }
        checkboxPanel.revalidate();
        checkboxPanel.repaint();
    }
    
    public static String readFromFile(String fileName) {
        String url = null;
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fileName))) {
            url = (String) ois.readObject();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
        return url;
    }
    
    public static String[] getLines(String fileName) {
        String content = readFromFile(fileName);
        return content.split("\n");
    }

    private ArrayList<JCheckBox> checkBoxes = new ArrayList<>();
    private int numberOfQuest = 1;
    String[] lines;
    String[][][] questions;
    ArrayList<String> answers = new ArrayList<>();
    ArrayList<Integer> points = new ArrayList<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton NextButton;
    private javax.swing.JLabel QuestLabel;
    private javax.swing.JButton StartTestButton;
    private javax.swing.JPanel checkboxPanel;
    private javax.swing.JLabel image;
    private javax.swing.JFormattedTextField testName;
    // End of variables declaration//GEN-END:variables

}
