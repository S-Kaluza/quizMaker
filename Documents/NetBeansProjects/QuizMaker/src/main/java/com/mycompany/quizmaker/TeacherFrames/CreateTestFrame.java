/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.quizmaker.TeacherFrames;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;

/**
 *
 * @author szymo
 */
public class CreateTestFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form CreateTestFrame
     */
    public CreateTestFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreateTestFileButton = new javax.swing.JButton();
        TestTittleTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        QuestionField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        AnswerField = new javax.swing.JTextField();
        AddAnswerButton = new javax.swing.JButton();
        SaveQuestion = new javax.swing.JButton();
        checkboxPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Create Test Form");
        setMaximumSize(new java.awt.Dimension(806, 400));
        setMinimumSize(new java.awt.Dimension(806, 400));
        setPreferredSize(new java.awt.Dimension(806, 400));

        CreateTestFileButton.setText("Start");
        CreateTestFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateTestFileButtonActionPerformed(evt);
            }
        });

        TestTittleTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TestTittleTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Tittle");

        jLabel2.setText("New Question");

        AnswerField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerFieldActionPerformed(evt);
            }
        });

        AddAnswerButton.setText("Add Answer");
        AddAnswerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAnswerButtonActionPerformed(evt);
            }
        });

        SaveQuestion.setText("Save");
        SaveQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveQuestionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout checkboxPanelLayout = new javax.swing.GroupLayout(checkboxPanel);
        checkboxPanel.setLayout(checkboxPanelLayout);
        checkboxPanelLayout.setHorizontalGroup(
            checkboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 251, Short.MAX_VALUE)
        );
        checkboxPanelLayout.setVerticalGroup(
            checkboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
        );

        jButton1.setText("Stop");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Select file ...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(CreateTestFileButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1))
                        .addComponent(TestTittleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(QuestionField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkboxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AnswerField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SaveQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddAnswerButton)
                    .addComponent(jButton2))
                .addContainerGap(257, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TestTittleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateTestFileButton)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(QuestionField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddAnswerButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AnswerField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SaveQuestion))
                            .addComponent(checkboxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 33, Short.MAX_VALUE))))
        );

        QuestionField.setVisible(false);
        jLabel2.setVisible(false);
        AnswerField.setVisible(false);
        AddAnswerButton.setVisible(false);
        SaveQuestion.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddAnswerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAnswerButtonActionPerformed
        // TODO add your handling code here:
        addToTest();
        AnswerField.setText("");
    }//GEN-LAST:event_AddAnswerButtonActionPerformed

    private void SaveQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveQuestionActionPerformed
        // TODO add your handling code here:
        String filename = TestTittleTextField.getText() + ".bin";
        String wrightAnswerFilename = TestTittleTextField.getText() + "_Answer.bin";
        File fileWithAnswer = new File(wrightAnswerFilename);
        if (!fileWithAnswer.exists()) {
            try {
                fileWithAnswer.createNewFile();
            } catch (Exception e) {
                System.out.println("Nie można utworzyć pliku");
            }
        }
        File file = new File(filename);
        String line = "";
        String answer = "";
        if (!file.exists()) {
            try {
                file.createNewFile();
            } catch (Exception e) {
                System.out.println("Nie można utworzyć pliku");
            }
        }
        for(JCheckBox cb: checkBoxes){
            line += cb.getText() + "|";
            if(cb.getSelectedObjects() != null){
                answer += "1";
            } else {
                answer += "0";
            }
        }
        System.out.println(answer);
        line = QuestionField.getText() + "_" + line;
        saveToFile(filename, line);
        saveToFile(wrightAnswerFilename, answer);
        checkBoxes.removeAll(checkBoxes);
        checkboxPanel.removeAll();
        checkboxPanel.revalidate();
        checkboxPanel.repaint();
        QuestionField.setText("");
        AnswerField.setText("");
    }//GEN-LAST:event_SaveQuestionActionPerformed

    private void CreateTestFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateTestFileButtonActionPerformed
        // TODO add your handling code here:
        this.testTittle = TestTittleTextField.getText();
        TestTittleTextField.setDisabledTextColor(Color.black);
        TestTittleTextField.setEditable(false);
        QuestionField.setVisible(true);
        AnswerField.setVisible(true);
        AddAnswerButton.setVisible(true);
        SaveQuestion.setVisible(true);
        jLabel1.setVisible(true);
        jLabel2.setVisible(true);
        File file = new File(TestTittleTextField.getText() + ".txt");
        System.out.println(file.exists());
        if (!file.exists()) {
            try {
                file.createNewFile();
            } catch (Exception e) {
                System.out.println("Nie można utworzyć pliku");
            }
        }
    }//GEN-LAST:event_CreateTestFileButtonActionPerformed

    private void TestTittleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TestTittleTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TestTittleTextFieldActionPerformed

    private void AnswerFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnswerFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AnswerFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        TestTittleTextField.setDisabledTextColor(Color.black);
        TestTittleTextField.setEditable(true);
        QuestionField.setVisible(false);
        AnswerField.setVisible(false);
        AddAnswerButton.setVisible(false);
        SaveQuestion.setVisible(false);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        
        int response = fileChooser.showOpenDialog(null);
        if(response == JFileChooser.APPROVE_OPTION){
            imageFile = new File(fileChooser.getSelectedFile().getAbsolutePath());
            System.out.println(imageFile);
        }  
    }//GEN-LAST:event_jButton2ActionPerformed

    public static String[] getLines(String fileName) {
        String content = readFromFile(fileName);
        return content.split("\n");
    }
    
    public static String readFromFile(String fileName) {
        String url = null;
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fileName))) {
            url = (String) ois.readObject();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
        return url;
    }
    
    public static void saveToFile(String fileName, String addTo) {
        String content = null;
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fileName))) {
            content = (String) ois.readObject();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fileName))) {
            oos.writeObject(content + "\n" + addTo);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    private void addToTest(){
        checkboxPanel.setLayout(new BoxLayout(checkboxPanel, BoxLayout.Y_AXIS));
        checkboxPanel.removeAll();
        checkBoxes.add(new JCheckBox(AnswerField.getText()));
        for(JCheckBox cb: checkBoxes){
            checkboxPanel.add(cb);
        }
        checkboxPanel.revalidate();
        checkboxPanel.repaint();
    }

    private ArrayList<JCheckBox> checkBoxes = new ArrayList<>();
    private File imageFile;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddAnswerButton;
    private javax.swing.JTextField AnswerField;
    private javax.swing.JButton CreateTestFileButton;
    private javax.swing.JTextField QuestionField;
    private javax.swing.JButton SaveQuestion;
    private javax.swing.JTextField TestTittleTextField;
    private javax.swing.JPanel checkboxPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
    private String testTittle;
}
